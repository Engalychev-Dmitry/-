{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1TEBJaKANAI0JxDY268tNeKGpHMChb2sK","timestamp":1728990238495}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["ФИО:"],"metadata":{"id":"Bu5gIJfHNPHw"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"CbHI8c7cM9Eg"},"outputs":[],"source":["Енгалычев Дмитрий Александрович"]},{"cell_type":"markdown","source":["# **Задание 1**"],"metadata":{"id":"VrNrBpmocGRd"}},{"cell_type":"markdown","source":["\n","\n","Дан словарь, содержащий имена и возраст людей, напишите программу выводящую возраст человека по имени\n","\n","Дано:\n","\n","```\n","{\"Alice\": 25, \"Bob\": 30, \"Charlie\": 35}\n","```\n","\n","Вввод:\n","\n","\n","```\n","Alice\n","```\n","\n","Вывод:\n","\n","\n","```\n","Alice 25\n","```\n"],"metadata":{"id":"XhV1bnm1bR2h"}},{"cell_type":"code","source":["dict = {\"Alice\": 25, \"Bob\": 30, \"Charlie\": 35}\n","print(dict[input('Введите имя: ')])"],"metadata":{"id":"9T0nNFCEbpaF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728990406591,"user_tz":-300,"elapsed":9145,"user":{"displayName":"Дима Енгалычев","userId":"04472464503988043271"}},"outputId":"9232d3ab-fa5f-4da0-d749-1eea51e1e525"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите имя: Alice\n","25\n"]}]},{"cell_type":"markdown","source":["# **Задание 2**\n"],"metadata":{"id":"lpjJz-_YcJ-t"}},{"cell_type":"markdown","source":["\n","\n","Дан список, состоящий из целых чисел, необходимо написать функцию считающую сумму всех положительных четных чисел списка\n","\n","Ввод:\n","\n","```\n","1, 2, 3, 4, 5, 6, 7, 8, 9\n","```\n","\n","Вывод:\n","\n","\n","```\n","20\n","```\n","\n","***Запрещено:***\n","\n","*   Использование готовых функций для суммирования чисел\n"],"metadata":{"id":"tMEsAB4rUiWW"}},{"cell_type":"code","source":["str_ = input('Ввелите список чисел через запятую c пробелом после нее: ')\n","str_ =  str_.replace(',','')\n","chislo_ = []\n","chislo = ''\n","for i in str_:\n","  if i == ' ':\n","    chislo_.append(chislo)\n","    chislo = ''\n","  else:\n","    chislo += i\n","    if chislo[-1] == str_[-1]:\n","       chislo_.append(chislo)\n","sum = 0\n","for i in chislo_:\n","  if int(i) > 0 and int(i) % 2 == 0:\n","    sum += int(i)\n","print(sum)\n","\n","\n"],"metadata":{"id":"wDNUFLeqNQS_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728991790924,"user_tz":-300,"elapsed":4682,"user":{"displayName":"Дима Енгалычев","userId":"04472464503988043271"}},"outputId":"fcf03f8d-c91d-4a78-f942-c65586dd89a8"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Ввелите список чисел через запятую c пробелом после нее: 1, 2, 34\n","1 2 34\n","34\n","['1', '2', '34']\n","36\n"]}]},{"cell_type":"markdown","source":["# **Задание 3**"],"metadata":{"id":"WT_v-vz1dUZJ"}},{"cell_type":"markdown","source":["Дан словарь, содержащий название фрукта и его цвет, выведите список всех желтых фруктов\n","\n","\n","Дано:\n","\n","```\n","fruits_and_colors = {\n","    \"apple\": \"red\",\n","    \"banana\": \"yellow\",\n","    \"mango\": \"yellow\",\n","    \"orange\": \"orange\",\n","    \"lemon\": \"yellow\",\n","    \"grape\": \"purple\"\n","}\n","```\n","\n","Вывод:\n","\n","\n","```\n","Yellow fruits:\n","banana\n","lemon\n","mango\n","```\n","\n"],"metadata":{"id":"ZI5Xeh2DdXgF"}},{"cell_type":"code","source":["fruits_and_colors = {\n","    \"apple\": \"red\",\n","    \"banana\": \"yellow\",\n","    \"mango\": \"yellow\",\n","    \"orange\": \"orange\",\n","    \"lemon\": \"yellow\",\n","    \"grape\": \"purple\"\n","}\n","print('yellow fruits:')\n","value = 'yellow'\n","for i in fruits_and_colors:\n","  if fruits_and_colors[i] == value:\n","    print(i)\n","\n","\n","\n"],"metadata":{"id":"aNzFTkhKdkTG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728992248483,"user_tz":-300,"elapsed":618,"user":{"displayName":"Дима Енгалычев","userId":"04472464503988043271"}},"outputId":"32b87c08-ee21-451f-b605-a0ac13b31877"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["yellow fruits:\n","banana\n","mango\n","lemon\n"]}]},{"cell_type":"markdown","source":["# **Задание 4**\n"],"metadata":{"id":"iHtMGt2icM7w"}},{"cell_type":"markdown","source":["\n","\n","Дан словарь, необходимо написать функцию меняющую ключ и значение местами\n","\n","Дано:\n","\n","\n","```\n","{\"a\": 1, \"b\": 2, \"c\": 3}\n","```\n","\n","Вывод:\n","\n","```\n","{1: 'a', 2: 'b', 3: 'c'}\n","```\n","\n"],"metadata":{"id":"rS3THsnBQ_EB"}},{"cell_type":"code","source":["dict_ = {\"a\": 1, \"b\": 2, \"c\": 3}\n","dict1 = {}\n","for k,v in dict_.items():\n","  dict1[v] = k\n","print(dict1)\n"],"metadata":{"id":"MNRusyLDcQ59","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728992531426,"user_tz":-300,"elapsed":307,"user":{"displayName":"Дима Енгалычев","userId":"04472464503988043271"}},"outputId":"6458020b-5005-4b91-ca6d-590fba3ac4c4"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["{1: 'a', 2: 'b', 3: 'c'}\n"]}]},{"cell_type":"markdown","source":["# **Задание 5**"],"metadata":{"id":"x6ff5nd0cUxD"}},{"cell_type":"markdown","source":["Дан список слов, неограниченной длинны, сформируйте словарь, где в качестве ключа будет слово, а в качестве значения количество символов\n","\n","**Критерии**\n","\n","\n","*   Словарь необходимо отсортировать по убыванию количества элементов в списке.\n","*   Подсчет элементов должен быть реализован в отдельной функции\n","*   Сортировка пары `ключ:значение` должна быть реализована также в виде отдельной функции\n","\n","\n","\n","\n","Дано:\n","```\n","['apple','banana','orange','apple','apple','banana']\n","```\n","\n","\n","Вывод:\n","```\n","{'apple':3, 'banana': 2, 'orange': 1}\n","```\n","\n","***Запрещено:***\n","\n","*   Использование готовых функций для сортировки словаря\n","*   Использование готовых функций для подсчета элементов\n","\n"],"metadata":{"id":"ypQNHOG4NQz3"}},{"cell_type":"code","source":["initial_list =['apple','banana','orange','apple','apple','banana']\n","slovo = ''\n","def schet(slovo):\n","  str_ = str(initial_list)\n","  str_ = str_.replace(\"'\",\"\").replace(',','').replace('[','').replace(']','')\n","  c =0\n","  list_ = []\n","  list2 = []\n","  list3 = []\n","  if str_[-1] != ' ':\n","    str_ = str_ + ' '\n","  for f in str_:\n","    if f == ' ':\n","      list_.append(slovo)\n","      slovo = ''\n","    else:\n","      slovo += f\n","  for a in list_:\n","    c = 0\n","    for b in list_:\n","      if a == b:\n","        c += 1\n","    if a in list2:\n","      continue\n","    else:\n","        list2.append(a)\n","        list3.append(c)\n","  res = [list2,list3]\n","  return res\n","result1 = schet(slovo)\n","def sort():\n","  fruits = result1[0]\n","  kolvo = result1[1]\n","  dict1 = {}\n","  c = 0\n","  for a in kolvo:\n","    c += 1\n","  maxs = 0\n","  for i in range(0,c):\n","   maxs = max(kolvo)\n","   indexx = kolvo.index(maxs)\n","   key = fruits[indexx]\n","   dict1[key] = maxs\n","   kolvo.pop(indexx)\n","   fruits.pop(indexx)\n","  return dict1\n","dict_res = sort()\n","print(dict_res)\n","\n","\n","\n","\n"],"metadata":{"id":"J10PjdVQUbyq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728994706932,"user_tz":-300,"elapsed":281,"user":{"displayName":"Дима Енгалычев","userId":"04472464503988043271"}},"outputId":"fde1f2d5-3354-40ff-c9bc-ab95410a6dae"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["{'apple': 3, 'banana': 2, 'orange': 1}\n"]}]},{"cell_type":"markdown","source":["# **Задание 6**"],"metadata":{"id":"d7fDUr2WcY_G"}},{"cell_type":"markdown","source":["Дан словарь, содержащий информацию о людях, необходимо:\n","\n","\n","\n","*   Вывести всех людей старше 30 лет\n","*   Вывести список городов и количество людей из словаря проживающих в них\n","*   Вывести список профессий и список людей для каждой профессии\n","\n","**Критерии**\n","\n","Каждый из пунктов необходимо реализовать в виде функции\n","\n"],"metadata":{"id":"m11qdVhSWBi7"}},{"cell_type":"code","source":["people_info = {\n","    \"Alice\": {\"age\": 25, \"city\": \"New York\", \"occupation\": \"Engineer\"},\n","    \"Bob\": {\"age\": 30, \"city\": \"Los Angeles\", \"occupation\": \"Designer\"},\n","    \"Charlie\": {\"age\": 35, \"city\": \"Chicago\", \"occupation\": \"Teacher\"},\n","    \"Diana\": {\"age\": 28, \"city\": \"Miami\", \"occupation\": \"Doctor\"},\n","    \"Ethan\": {\"age\": 40, \"city\": \"Seattle\", \"occupation\": \"Chef\"},\n","    \"Frank\": {\"age\": 32, \"city\": \"Atlanta\", \"occupation\": \"Lawyer\"},\n","    \"Gabriella\": {\"age\": 29, \"city\": \"San Francisco\", \"occupation\": \"Software Engineer\"},\n","    \"Harrison\": {\"age\": 38, \"city\": \"Denver\", \"occupation\": \"Architect\"},\n","    \"Isabella\": {\"age\": 26, \"city\": \"Washington D.C.\", \"occupation\": \"Journalist\"},\n","    \"Julian\": {\"age\": 42, \"city\": \"Miami\", \"occupation\": \"Musician\"},\n","    \"Kate\": {\"age\": 31, \"city\": \"Philadelphia\", \"occupation\": \"Nurse\"},\n","    \"Lucas\": {\"age\": 36, \"city\": \"Nashville\", \"occupation\": \"Businessman\"},\n","    \"Mia\": {\"age\": 27, \"city\": \"Atlanta\", \"occupation\": \"Artist\"},\n","    \"Natalie\": {\"age\": 39, \"city\": \"Portland\", \"occupation\": \"Writer\"},\n","    \"Oliver\": {\"age\": 44, \"city\": \"Minneapolis\", \"occupation\": \"Professor\"},\n","    \"Penelope\": {\"age\": 33, \"city\": \"San Diego\", \"occupation\": \"Marketing Manager\"},\n","    \"Quincy\": {\"age\": 41, \"city\": \"Nashville\", \"occupation\": \"Singer\"},\n","    \"Rachel\": {\"age\": 34, \"city\": \"Cleveland\", \"occupation\": \"Teacher\"},\n","    \"Sophia\": {\"age\": 29, \"city\": \"Nashville\", \"occupation\": \"Engineer\"},\n","    \"Tessa\": {\"age\": 37, \"city\": \"Miami\", \"occupation\": \"Lawyer\"}\n","}"],"metadata":{"id":"lSNtB39OWtFl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from logging import getLogRecordFactory\n","people_info = {\n","    \"Alice\": {\"age\": 25, \"city\": \"New York\", \"occupation\": \"Engineer\"},\n","    \"Bob\": {\"age\": 30, \"city\": \"Los Angeles\", \"occupation\": \"Designer\"},\n","    \"Charlie\": {\"age\": 35, \"city\": \"Chicago\", \"occupation\": \"Teacher\"},\n","    \"Diana\": {\"age\": 28, \"city\": \"Miami\", \"occupation\": \"Doctor\"},\n","    \"Ethan\": {\"age\": 40, \"city\": \"Seattle\", \"occupation\": \"Chef\"},\n","    \"Frank\": {\"age\": 32, \"city\": \"Atlanta\", \"occupation\": \"Lawyer\"},\n","    \"Gabriella\": {\"age\": 29, \"city\": \"San Francisco\", \"occupation\": \"Software Engineer\"},\n","    \"Harrison\": {\"age\": 38, \"city\": \"Denver\", \"occupation\": \"Architect\"},\n","    \"Isabella\": {\"age\": 26, \"city\": \"Washington D.C.\", \"occupation\": \"Journalist\"},\n","    \"Julian\": {\"age\": 42, \"city\": \"Miami\", \"occupation\": \"Musician\"},\n","    \"Kate\": {\"age\": 31, \"city\": \"Philadelphia\", \"occupation\": \"Nurse\"},\n","    \"Lucas\": {\"age\": 36, \"city\": \"Nashville\", \"occupation\": \"Businessman\"},\n","    \"Mia\": {\"age\": 27, \"city\": \"Atlanta\", \"occupation\": \"Artist\"},\n","    \"Natalie\": {\"age\": 39, \"city\": \"Portland\", \"occupation\": \"Writer\"},\n","    \"Oliver\": {\"age\": 44, \"city\": \"Minneapolis\", \"occupation\": \"Professor\"},\n","    \"Penelope\": {\"age\": 33, \"city\": \"San Diego\", \"occupation\": \"Marketing Manager\"},\n","    \"Quincy\": {\"age\": 41, \"city\": \"Nashville\", \"occupation\": \"Singer\"},\n","    \"Rachel\": {\"age\": 34, \"city\": \"Cleveland\", \"occupation\": \"Teacher\"},\n","    \"Sophia\": {\"age\": 29, \"city\": \"Nashville\", \"occupation\": \"Engineer\"},\n","    \"Tessa\": {\"age\": 37, \"city\": \"Miami\", \"occupation\": \"Lawyer\"}\n","}\n","def stariki(people_info):\n","  stark = []\n","  for k,v in people_info.items():\n","    if v[\"age\"] > 30:\n","      stark.append(k)\n","  return stark\n","print(stariki(people_info))\n","slovo = ''\n","\n","\n","\n","def gorod(people_info):\n","  goroda = []\n","  for i in people_info.keys():\n","     city = people_info[i]['city']\n","     goroda.append(city)\n","  list2 = []\n","  list3 = []\n","  for a in goroda:\n","        c = 0\n","        for b in goroda:\n","          if a == b:\n","             c += 1\n","        if a in list2:\n","            continue\n","        else:\n","            list2.append(a)\n","            list3.append(c)\n","  res = [list2,list3]\n","  return res\n","h = gorod(people_info)\n","resslovo =  h[0]\n","reskolvo = h[1]\n","g = 0\n","for j in resslovo:\n","  g+=1\n","for a in range(0,g):\n","  print(resslovo[a] + ': ' + str(reskolvo[a]))\n","\n","\n","def prof(people_info):\n","   prof = []\n","   for i in people_info.keys():\n","     proff = people_info[i][\"occupation\"]\n","     prof.append(proff)\n","   list2 = []\n","   list3 = []\n","   for a in prof:\n","        c = 0\n","        for b in prof:\n","          if a == b:\n","             c += 1\n","        if a in list2:\n","            continue\n","        else:\n","            list2.append(a)\n","   return list2\n","print(prof(people_info))\n","def prof_people(people_info):\n","  prof_list = prof(people_info)\n","  for i in prof_list:\n","    for a in\n","\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"qcLO5eQwXkNK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728997484728,"user_tz":-300,"elapsed":326,"user":{"displayName":"Дима Енгалычев","userId":"04472464503988043271"}},"outputId":"fdbcd2f2-4cb2-4d35-baaa-595919439e01"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["['Charlie', 'Ethan', 'Frank', 'Harrison', 'Julian', 'Kate', 'Lucas', 'Natalie', 'Oliver', 'Penelope', 'Quincy', 'Rachel', 'Tessa']\n","New York: 1\n","Los Angeles: 1\n","Chicago: 1\n","Miami: 3\n","Seattle: 1\n","Atlanta: 2\n","San Francisco: 1\n","Denver: 1\n","Washington D.C.: 1\n","Philadelphia: 1\n","Nashville: 3\n","Portland: 1\n","Minneapolis: 1\n","San Diego: 1\n","Cleveland: 1\n","['Engineer', 'Designer', 'Teacher', 'Doctor', 'Chef', 'Lawyer', 'Software Engineer', 'Architect', 'Journalist', 'Musician', 'Nurse', 'Businessman', 'Artist', 'Writer', 'Professor', 'Marketing Manager', 'Singer']\n"]}]},{"cell_type":"markdown","source":["# **Задание 7**"],"metadata":{"id":"27IuB2YScezw"}},{"cell_type":"markdown","source":["Задание: Разработка системы отзывов о предметах\n","\n","Описание: Создать программу на Python для хранения и управления отзывами о предметах учебного курса. Программа должна позволять пользователям добавлять, просматривать и удалять отзывы, а также вычислять средний балл по заданному предмету.\n","\n","**Функционал:**\n","\n","*   Добавление отзыва и оценки:\n","   *   Пользователь может ввести название предмета, оценку (от 1 до 5) и текст отзыва.\n","   *   Отзывы должны храниться в структуре данных (например, словаре), где ключом будет название предмета, а значением - список отзывов (каждый отзыв может хранить оценку и комментарий).\n","*   Просмотр отзывов и оценок:\n","   *   Пользователь может запросить отзывы для указанного предмета.\n","   *   Если для указанного предмета есть отзывы, программа должна отобразить список всех отзывов и соответствующих оценок.\n","*   Удаление отзыва:\n","   *   Пользователь может удалить отзыв по индексу. Необходимо заранее уведомить пользователя о том, какие отзывы доступны для удаления.\n","   *   Программа должна обработать ситуацию, когда индекс введен неправильно.\n","*   Вычисление среднего балла по предмету:\n","   *   Пользователь может ввести название предмета, и программа должна вычислить и вывести средний балл по всем отзывам для этого предмета.\n","   *   Если отзывов нет, программа должна сообщить об этом.\n","\n","\n","**Критерии:**\n","\n","*   Код должен быть оформлен в виде функций\n","*   Необходимо обрабатывать неправильный ввод пользователя\n","*   Должны быть комментарии к функциям\n","*   Присутсвует весь дополнительный функционал\n","\n","\n","\n","**Опционально:**\n","\n","Предлагаю вам добавить свои критерии оценки или вопросы, на которые должен ответить студент, чтобы оценить пару\n","\n","\n"],"metadata":{"id":"Fd95-S9cYhct"}},{"cell_type":"code","source":[],"metadata":{"id":"kzucJrCUa0o7"},"execution_count":null,"outputs":[]}]}